{"version":3,"file":"static/js/602.f2eb694d.chunk.js","mappings":"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","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const MovieLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #191d1e;\r\n\r\n  &:hover {\r\n    color: tomato;\r\n  }\r\n`;\r\n","import { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Item, MovieLink } from './EditorList.styled';\r\n\r\nconst EditorList = ({ films }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <List>\r\n      {films.map(film => (\r\n        <Item key={film.id}>\r\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\r\n            {film.title}\r\n          </MovieLink>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nEditorList.propTypes = {\r\n  films: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default EditorList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 12px 14px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 3px solid #191d1e;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  margin-right: 10px;\r\n  border-radius: 4px 8px;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    color: tomato;\r\n    border: 3px solid tomato;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 12px 12px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  border: 3px solid #191d1e;\r\n  color: #191d1e;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  border-radius: 4px 8px;\r\n\r\n  &:hover {\r\n    color: tomato;\r\n    border: 3px solid tomato;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchForm, Input, Button } from './Form.styled';\r\n\r\nconst Form = ({ searchMovies }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleInputChange = event => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    searchMovies(query.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <SearchForm onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"query\"\r\n        autoFocus\r\n        value={query}\r\n        onChange={handleInputChange}\r\n      />\r\n      <Button type=\"submit\">Search</Button>\r\n    </SearchForm>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  searchMovies: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import { useState } from 'react';\r\nimport Loader from 'components/Loader/Loader';\r\nimport EditorList from 'pages/EditorList/EditorList';\r\nimport Form from 'components/Form/Form';\r\nimport { fetchSearchByKeyword } from 'services/TmbdApi';\r\n\r\nconst Movies = () => {\r\n  const [searchFilms, setSearchFilms] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [noMoviesText, setNoMoviesText] = useState(false);\r\n\r\n  const searchMovies = queryMovie => {\r\n    setLoading(true);\r\n\r\n    fetchSearchByKeyword(queryMovie)\r\n      .then(searchResults => {\r\n        setSearchFilms(searchResults);\r\n        setNoMoviesText(searchResults.length === 0);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Form searchMovies={searchMovies} />\r\n      {loading && <Loader />}\r\n      {noMoviesText && (\r\n        <p>There is no movies with this request. Please, try again</p>\r\n      )}\r\n      {searchFilms && <EditorList films={searchFilms} />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\r\n\r\nexport const fetchTrending = async () => {\r\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchSearchByKeyword = async keyword => {\r\n  const response = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchActors = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nexport const fetchReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return response.data.results;\r\n};\r\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","form","Input","input","Button","button","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","Form","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","EditorList","axios","defaults","baseURL","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}