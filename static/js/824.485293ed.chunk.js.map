{"version":3,"file":"static/js/824.485293ed.chunk.js","mappings":"sNAEA,MAAMA,EAAW,gCAGXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+N,qBCJN,MAAMC,EAAaC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6QAiBtBC,EAAeJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iRAiB1BI,EAAYP,EAAAA,GAAOQ,QAAOC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mGAO1BO,EAAYV,EAAAA,GAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2EAiE1B,EA3DeU,KAAO,IAADC,EACnB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,OAC7BC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,IAC/BK,GAAWC,EAAAA,EAAAA,MACXC,EAAqC,QAA7Bb,EAAGC,EAAWa,IAAI,mBAAW,IAAAd,EAAAA,EAAI,IAE/Ce,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,ODbSD,iBACEE,EAAAA,EAAMJ,IAAI,GAADK,OAC3BxC,EAAQ,uBAAAwC,OAAsBN,EAAQ,8CACzCjC,IAEcwC,KCQSC,CAAQR,GACrBT,EAAQa,EAAKK,QAEdlB,EAAMmB,QAAuB,KAAbV,GAKnBR,EAASD,GACTI,EAAS,QALTA,EAAS,0FAADW,OAAqBN,EAAQ,mEACrCR,EAAS,IACTK,EAAU,YAKd,CAAE,MAAOH,GACPC,EAASD,EAAMiB,QACjB,GAGFC,EAAW,IAWb,OACEC,EAAAA,EAAAA,MAACjC,EAAS,CAAAkC,SAAA,EACRC,EAAAA,EAAAA,KAACtC,EAAY,CAAAqC,UACXC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOjB,EAAUkB,SAXrBC,IACnB,MAAMC,EAAgBD,EAAME,OAAOJ,MACnC,GAAsB,KAAlBG,EACF,OAAO/B,EAAc,CAAC,GAExBA,EAAc,CAAEW,SAAUoB,GAAgB,MAS5B,aAAXxB,IAAyBmB,EAAAA,EAAAA,KAAChC,EAAS,CAAA+B,SAAEpB,KAEtCqB,EAAAA,EAAAA,KAAC3C,EAAU,CAAA0C,SACRvB,EAAM+B,KAAIC,IACTR,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAE,GAAAnB,OAAKiB,EAAKG,IAAMC,MAAO,CAAEC,KAAM9B,GAAWgB,SAC/CS,EAAKM,SAFDN,EAAKG,UAOR,C","sources":["services/fetchFilm.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '91e9e43bc5abd62bce4a412250ca2b4a';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MWU5ZTQzYmM1YWJkNjJiY2U0YTQxMjI1MGNhMmI0YSIsInN1YiI6IjY0OGRmMWZjYzNjODkxMDBlYjMyOGIyNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.na6QWvyUcstLt3R2SMZMeFGFAjRDN7q7NqBOmfFB0qU',\n  },\n};\n\n// функція отримання переліку топових фільмів на день\nexport const getMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації по обраному фільму\nexport const getDetailMovie = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція отримання детальної інформації про акторський склад для сторінки кінофільму\nexport const getCast = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція запиту оглядів для сторінки кінофільму\nexport const getReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\n// функція пошуку фільма за назвою\nexport const getFilm = async filmName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${filmName}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getFilm } from 'services/fetchFilm';\nimport { Link } from 'react-router-dom';\n\nconst ListOfFilm = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  background: #000000;\n  color: #f5e614;\n  text-decoration: none;\n\n  li {\n    font-size: 18px;\n    font-weight: 600;\n    list-style: none;\n    text-decoration: none;\n  }\n`;\n\nconst InputWrapper = styled.form`\n  background-color: #f5e614;\n  height: 30px;\n  width: 200px;\n  border-radius: 5px;\n  list-style: none;\n  input {\n    text-decoration: none;\n    margin-left: 15px;\n    margin-top: 5px;\n  }\n  label {\n    text-decoration: none;\n    color: #000000;\n  }\n`;\n\nconst Container = styled.section`\n  padding: 20px;\n  background: #000000;\n  list-style: none;\n  text-decoration: none;\n`;\n\nconst ErrorText = styled.p`\n  margin-top: 20px;\n  color: yellow;\n  text-decoration: none;\n`;\n\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const location = useLocation();\n  const filmName = searchFilm.get('filmName') ?? '';\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const date = await getFilm(filmName);\n        const films = date.results;\n\n        if (!films.length && filmName !== '') {\n          setError(`Фільми зі словом ${filmName} не знайдені`);\n          setFilms([]);\n          setStatus('rejected');\n        } else {\n          setFilms(films);\n          setError(null);\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchFilm();\n  });\n\n  const updateSearch = event => {\n    const filmNameValue = event.target.value;\n    if (filmNameValue === '') {\n      return setSearchFilm({});\n    }\n    setSearchFilm({ filmName: filmNameValue });\n  };\n\n  return (\n    <Container>\n      <InputWrapper>\n        <input type=\"text\" value={filmName} onChange={updateSearch} />\n      </InputWrapper>\n\n      {status === 'rejected' && <ErrorText>{error}</ErrorText>}\n\n      <ListOfFilm>\n        {films.map(film => (\n          <li key={film.id}>\n            <Link to={`${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n      </ListOfFilm>\n    </Container>\n  );\n};\n\nexport default Movies;"],"names":["BASE_URL","options","method","headers","accept","Authorization","ListOfFilm","styled","ul","_templateObject","_taggedTemplateLiteral","InputWrapper","form","_templateObject2","Container","section","_templateObject3","ErrorText","p","_templateObject4","Movies","_searchFilm$get","searchFilm","setSearchFilm","useSearchParams","films","setFilms","useState","error","setError","status","setStatus","location","useLocation","filmName","get","useEffect","async","date","axios","concat","data","getFilm","results","length","message","fetchFilm","_jsxs","children","_jsx","type","value","onChange","event","filmNameValue","target","map","film","Link","to","id","state","from","title"],"sourceRoot":""}