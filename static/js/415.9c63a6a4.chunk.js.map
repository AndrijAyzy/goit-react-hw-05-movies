{"version":3,"file":"static/js/415.9c63a6a4.chunk.js","mappings":"kNAGaA,EAAgBC,EAAAA,GAAAA,QAAH,uEAKbC,EAAeD,EAAAA,GAAAA,GAAH,2JASZE,EAAOF,EAAAA,GAAAA,GAAH,gEAKJG,EAAWH,EAAAA,GAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kO,SCDvB,EAlBkB,SAAC,GAAwB,IAAtBM,EAAqB,EAArBA,eACnB,OACE,UAACP,EAAD,YACE,SAACE,EAAD,8BAEA,SAACC,EAAD,UACGI,EAAeC,KAAI,SAAAC,GAAa,OAC/B,SAACL,EAAD,WACE,SAACC,EAAD,CAAYK,GAAE,kBAAaD,EAAcE,IAAzC,SACGF,EAAcG,SAFJH,EAAcE,GADE,QAUxC,C,8ECvBYE,EAAmB,WAC9B,OAEE,UAAC,KAAD,YACE,SAAC,KAAD,CAAKC,MAAM,QACX,SAAC,KAAD,CAAKA,MAAM,SACX,SAAC,KAAD,CAAKA,MAAM,UAGhB,C,2KCRYC,EAAed,EAAAA,GAAAA,OAAH,wGAMZe,GAAgBf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,gVAmBpBiB,GAASC,EAAAA,EAAAA,IAAH,kHASCC,EAAcnB,EAAAA,GAAAA,IAAH,gHAOXoB,EAAMpB,EAAAA,GAAAA,IAAH,kOAODiB,GACM,qBAAGJ,KAAH,G,0HCVrB,UArCa,WACX,OAA4CQ,EAAAA,EAAAA,UAAS,IAArD,eAAOf,EAAP,KAAuBgB,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEK,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAkBQ,GALM,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGD,8BACGL,GACC,SAAC,IAAD,IACEE,GACF,mGAIA,SAAC,IAAD,CAAWnB,eAAgBA,KAIlC,C,mMCtCKyB,EAAU,6BACVC,EAAU,mCAEHH,EAAgB,mCAAG,sGACPI,EAAAA,EAAAA,IAAA,kEACsCD,IAF/B,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mCACgBC,EADhB,iCACgDI,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,oBACoBN,EADpB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,4BAC4BN,EAD5B,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,6BAC6BN,EAD7B,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SharedLayout/LoadingDots.jsx","components/SharedLayout/SharedLayout.styled.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0d57aa;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './MovieList.styled';\n\nconst MovieList = ({ trendingMovies }) => {\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n\n      <List>\n        {trendingMovies.map(trendingMovie => (\n          <ListItem key={trendingMovie.id}>\n            <StyledLink to={`/movies/${trendingMovie.id}`}>\n              {trendingMovie.title}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { LoadingDots, Dot } from './SharedLayout.styled'; \n\nexport const LoadingIndicator = () => {\n  return (\n\n    <LoadingDots>\n      <Dot delay=\"0s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".4s\" />\n    </LoadingDots>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledHeader = styled.header`\n  padding: 20px 30px;\n  text-align: left;\n  box-shadow: 0px 4px 4px #d3d3d3;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\nfont-size: 20px;\nmargin-right: 50px;\npadding: 5px 15px;\nborder: 1px solid #000000;\nborder-radius: 10px;\nbackground-color: #626466;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\ncolor: #ffffff;\n\n&:hover,\n&:focus {\n  background-color: #ede207;\n  color: #000000;\n  box-shadow: #ede207;\n}\n`;\n\nconst bounce = keyframes`\n  0%, 80%, 100% {\n    transform: scale(0);\n  }\n  40% {\n    transform: scale(1);\n  }\n`;\n\nexport const LoadingDots = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Dot = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 50%;\n  background-color: #1c85ff;\n  animation: ${bounce} 1s infinite ease-in-out;\n  animation-delay: ${({ delay }) => delay};\n`;\n","import React, { useState, useEffect } from 'react';\nimport { fetchTrendMovies } from '../services/api';\nimport MovieList from 'components/MovieList/MovieList'; \nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results); \n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingIndicator />\n      ) : error ? (\n        <p>\n          Sorry, we could not fetch the trending movies. Please try again later.\n        </p>\n      ) : (\n        <MovieList trendingMovies={trendingMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","trendingMovies","map","trendingMovie","to","id","title","LoadingIndicator","delay","StyledHeader","StyledNavLink","NavLink","bounce","keyframes","LoadingDots","Dot","useState","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","baseURL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}